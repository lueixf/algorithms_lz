from random import randint

# Сортировка выбором
badis = 0
random_list = []  # создаем список для сортировки выбором
for i in range(100):  # добавляем 100 случайных элементов
    random_list.append(randint(0, 1000000))

for i in range(len(random_list)):  # значение i соответствует количеству отсортированных элементов
    l = i  # исходно считаем наименьшим первый элемент
    for j in range(i + 1, len(random_list)):  # этот цикл перебирает несортированные элементы
        if random_list[j] < random_list[l]:
            l = j  # находим наименьший элемент
    random_list[i], random_list[l] = random_list[l], random_list[i]  # меняем местами
    print(random_list)  # выводим промежуточный результат
    badis += 1  # увеличиваем количество сравнений

random_list.reverse()  # переворачиваем список
print(random_list)  # выводим отсортированный список


# Сортировка пузырьком
l = []  # создаем новый список для сортировки пузырьком
for i in range(100):  # добавляем 100 случайных элементов
    l.append(randint(0, 1000000))

stop_flag = True  # ставим флаг для остановки цикла
datus = 0  # создаем счетчик сравнений

while stop_flag:  # запускаем цикл пока не сработает стопфлаг
    stop_flag = False  # предполагаем, что сортировка завершена
    for i in range(len(l) - 1):  # цикл с i
        if l[i] > l[i + 1]:  # если текущий элемент больше следующего
            l[i], l[i + 1] = l[i + 1], l[i]  # меняем их местами
            stop_flag = True  # флаг устанавливаем в True, чтобы продолжить цикл
            print(l)  # выводим промежуточный результат
            datus += 1  # увеличиваем счетчик сравнений

l.reverse()  # переворачиваем список
print(l)  # выводим отсортированный список
print('Количество сравнений пузырьком:', datus)  # выводим количество сравнений пузырьком
print('Количество сравнений выборкой:', badis)  # выводим количество сравнений выборкой